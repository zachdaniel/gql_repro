defmodule GqlRepro.Repo.Migrations.CesiumAssets do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:virtual_outcrop_models, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :name, :text
      add :outcrop_id, :bigint
    end

    create table(:outcrop, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
    end

    alter table(:virtual_outcrop_models) do
      modify :outcrop_id,
             references(:outcrop,
               column: :id,
               name: "virtual_outcrop_models_outcrop_id_fkey",
               type: :bigint,
               prefix: "public"
             )
    end

    create table(:cesium_assets, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :state, :text, null: false, default: "initialized"
      add :cesium_asset_id, :bigint
      add :cesium_bucket_credentials, :map
      add :cesium_upload_callback_url, :text
      add :cesium_progress, :bigint
      add :cesium_archive_id, :bigint
      add :cesium_archive_byte_size, :bigint
      add :utm_data, :map
      add :tileset_path, :text
      add :approved, :boolean, default: false
      add :is_clipping, :boolean, default: false
      add :error, :text

      add :virtual_outcrop_model_id,
          references(:virtual_outcrop_models,
            column: :id,
            name: "cesium_assets_virtual_outcrop_model_id_fkey",
            type: :bigint,
            prefix: "public"
          )

      add :location_id, :bigint
      add :default_camera_id, :bigint
    end

    create table(:cesium_asset_locations, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
    end

    alter table(:cesium_assets) do
      modify :location_id,
             references(:cesium_asset_locations,
               column: :id,
               name: "fk_location_id_cesium_asset_locations_id",
               type: :bigint,
               prefix: "public"
             )

      modify :default_camera_id,
             references(:cesium_asset_locations,
               column: :id,
               name: "fk_default_camera_id_cesium_asset_locations_id",
               type: :bigint,
               prefix: "public"
             )
    end

    create unique_index(:cesium_assets, [:virtual_outcrop_model_id],
             name: "cesium_assets_unique_per_vom_index"
           )

    alter table(:cesium_asset_locations) do
      add :heading, :float, null: false
      add :pitch, :float, null: false
      add :roll, :float, null: false
      add :longitude, :float, null: false
      add :latitude, :float, null: false
      add :height, :float, null: false
    end

    create table(:cesium_asset_file_copies, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :source_provider, :text
      add :target_provider, :text
      add :processed, :boolean, default: false
      add :source_path, :text
      add :target_path, :text
      add :error, :text

      add :cesium_asset_id,
          references(:cesium_assets,
            column: :id,
            name: "cesium_asset_file_copies_cesium_asset_id_fkey",
            type: :bigint,
            prefix: "public"
          ),
          null: false
    end

    create table(:cesium_asset_archive_zip_downloads, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :processed, :boolean, default: false
      add :target_path, :text, null: false
      add :file_name, :text, null: false
      add :compression_method, :bigint, null: false
      add :local_header_offset, :bigint, null: false
      add :compressed_size, :bigint, null: false
      add :crc, :bigint, null: false
      add :uncompressed_size, :bigint, null: false
      add :bit_flag, :bigint, null: false
      add :last_modified_datetime, :naive_datetime, null: false
      add :cesium_api_asset_id, :bigint, null: false
      add :archive_id, :bigint, null: false
      add :archive_size, :bigint, null: false
      add :error, :text

      add :cesium_asset_id,
          references(:cesium_assets,
            column: :id,
            name: "cesium_asset_archive_zip_downloads_cesium_asset_id_fkey",
            type: :bigint,
            prefix: "public"
          ),
          null: false
    end
  end

  def down do
    drop constraint(
           :cesium_asset_archive_zip_downloads,
           "cesium_asset_archive_zip_downloads_cesium_asset_id_fkey"
         )

    drop table(:cesium_asset_archive_zip_downloads)

    drop constraint(:cesium_asset_file_copies, "cesium_asset_file_copies_cesium_asset_id_fkey")

    drop table(:cesium_asset_file_copies)

    alter table(:cesium_asset_locations) do
      remove :height
      remove :latitude
      remove :longitude
      remove :roll
      remove :pitch
      remove :heading
    end

    drop_if_exists unique_index(:cesium_assets, [:virtual_outcrop_model_id],
                     name: "cesium_assets_unique_per_vom_index"
                   )

    drop constraint(:cesium_assets, "fk_location_id_cesium_asset_locations_id")

    drop constraint(:cesium_assets, "fk_default_camera_id_cesium_asset_locations_id")

    alter table(:cesium_assets) do
      modify :default_camera_id, :bigint
      modify :location_id, :bigint
    end

    drop table(:cesium_asset_locations)

    drop constraint(:cesium_assets, "cesium_assets_virtual_outcrop_model_id_fkey")

    drop table(:cesium_assets)

    drop constraint(:virtual_outcrop_models, "virtual_outcrop_models_outcrop_id_fkey")

    alter table(:virtual_outcrop_models) do
      modify :outcrop_id, :bigint
    end

    drop table(:outcrop)

    drop table(:virtual_outcrop_models)
  end
end
